Create a superclass named “MemberOfUniversity”
has some common attributes such as ‘name’,
‘address’ and has a abstract method show() to print
the value of instance variables. Use Parameterized
constructor to initialized instance variables. Provide
two subclass ‘Student’ and ‘Teacher’ that inherits
‘MemberOfUniversity’. Now ‘student’ has some
specific attributes likes ‘Roll’, ‘Year’, ‘semester’
and ‘Teacher’ has some attributes like
‘designation’, ‘salary’. Use keyword ‘super’ in the
subclass constructor. Also use “dynamic method
dispatch” for the overriding method. Write a class
“TestInheritance” to demonstrate the capabilities of
inheritance.

abstract class MemberOfUniversity{
    private String name;
    private String address;

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getAddress() {
        return address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    public MemberOfUniversity(String name, String address) {
        this.name = name;
        this.address = address;
    }

    abstract void show();
}

class Student extends MemberOfUniversity{
    private int roll;
    private int year;
    private int semester;

    public int getRoll() {
        return roll;
    }

    public void setRoll(int roll) {
        this.roll = roll;
    }

    public int getYear() {
        return year;
    }

    public void setYear(int year) {
        this.year = year;
    }

    public int getSemester() {
        return semester;
    }

    public void setSemester(int semester) {
        this.semester = semester;
    }

    public Student(String name, String address, int roll, int year, int semester) {
        super(name, address);
        this.roll = roll;
        this.year = year;
        this.semester = semester;
    }

    public void show() {
        System.out.println("---- Student Details ----");
        System.out.println("Name: " + getName());
        System.out.println("Address: " + getAddress());
        System.out.println("Roll: " + roll);
        System.out.println("Year: " + year);
        System.out.println("Semester: " + semester);
    }
}

class Teacher extends MemberOfUniversity{
    private String designation;
    private double salary;

    public String getDesignation() {
        return designation;
    }

    public void setDesignation(String designation) {
        this.designation = designation;
    }

    public double getSalary() {
        return salary;
    }

    public void setSalary(double salary) {
        this.salary = salary;
    }

    public Teacher(String name, String address, String designation, double salary) {
        super(name, address);
        this.designation = designation;
        this.salary = salary;
    }

    public void show() {
        System.out.println("---- Teacher Details ----");
        System.out.println("Name: " + getName());
        System.out.println("Address: " + getAddress());
        System.out.println("Designation: " + designation);
        System.out.println("Salary: " + salary);
    }
}
class TestInheritance{
    public static void main(String[] args){
        MemberOfUniversity student = new Student("Alice", "Dhaka", 101, 2, 1);
        MemberOfUniversity teacher = new Teacher("Mr. Rahman", "Chittagong", "Professor", 85000);

        MemberOfUniversity member;

        member = student;
        member.show();

        member = teacher;
        member.show();
    }
}
